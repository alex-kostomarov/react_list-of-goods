{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isHiddenList","visibleList","showGoodsList","setState","reverseList","reverse","sortListAlphabetically","sort","word1","word2","localeCompare","resetList","sortListByLength","length","className","this","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,cAAc,EACdC,YAAY,GAAD,OAAMJ,I,EAGnBK,cAAgB,WACd,EAAKC,SAAS,CAAEH,cAAc,K,EAGhCI,YAAc,WACZ,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,YAAYI,e,EAInCC,uBAAyB,WACvB,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,YAAYM,MAAK,SAACC,EAAOC,GAAR,OAClCD,EAAME,cAAcD,W,EAK1BE,UAAY,WACV,EAAKR,SAAS,CAAEF,YAAY,GAAD,OAAMJ,M,EAGnCe,iBAAmB,WACjB,EAAKT,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,YAAYM,MAAK,SAACC,EAAOC,GAAR,OAClCD,EAAMK,OAASJ,EAAMI,e,4CAK3B,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,uCAECC,KAAKhB,MAAMC,aACV,wBACEgB,KAAK,SACLC,QAASF,KAAKb,cAFhB,mBAOA,qCACE,6BACGa,KAAKhB,MAAME,YAAYiB,KAAI,SAAAC,GAAI,OAC9B,6BACGA,GADMA,QAMb,wBACEH,KAAK,SACLC,QAASF,KAAKX,YAFhB,qBAOA,wBACEY,KAAK,SACLC,QAASF,KAAKT,uBAFhB,iCAOA,wBACEU,KAAK,SACLC,QAASF,KAAKJ,UAFhB,mBAOA,wBACEK,KAAK,SACLC,QAASF,KAAKH,iBAFhB,sC,GA/EMQ,IAAMC,WA4FTvB,IC9GfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05ff70a7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isHiddenList: boolean;\n  visibleList: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isHiddenList: true,\n    visibleList: [...goodsFromServer],\n  };\n\n  showGoodsList = () => {\n    this.setState({ isHiddenList: false });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      visibleList: state.visibleList.reverse(),\n    }));\n  };\n\n  sortListAlphabetically = () => {\n    this.setState(state => ({\n      visibleList: state.visibleList.sort((word1, word2) => (\n        word1.localeCompare(word2)\n      )),\n    }));\n  };\n\n  resetList = () => {\n    this.setState({ visibleList: [...goodsFromServer] });\n  };\n\n  sortListByLength = () => {\n    this.setState(state => ({\n      visibleList: state.visibleList.sort((word1, word2) => (\n        word1.length - word2.length\n      )),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {/* {goodsFromServer.length} */}\n        {this.state.isHiddenList ? (\n          <button\n            type=\"button\"\n            onClick={this.showGoodsList}\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <ul>\n              {this.state.visibleList.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n\n            <button\n              type=\"button\"\n              onClick={this.reverseList}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortListAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortListByLength}\n            >\n              Sort by length\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}